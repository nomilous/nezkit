// Generated by CoffeeScript 1.4.0
var support;

module.exports = support = {
  fn2modules: function(fn) {
    var arg, funcStr, module, modules, _i, _len, _ref;
    modules = [];
    funcStr = fn.toString();
    _ref = fn.fing.args;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      arg = _ref[_i];
      module = arg.name;
      if (module.match(/^_arg/)) {
        if (funcStr.match(/_ref = _arg/)) {
          support.mixedDepth(modules, funcStr);
        } else {
          support.uniformDepth(modules, funcStr);
        }
      } else {
        modules.push({
          module: arg.name
        });
      }
    }
    return modules;
  },
  mixedDepth: function(modules, funcStr) {
    throw new Error('Mixed depth focussed injection not yet supported');
  },
  uniformDepth: function(modules, funcStr) {
    var chain, narg, nestings, ref, targetArg, _i, _len, _ref;
    nestings = {};
    _ref = funcStr.match(/_(arg|ref)\.(\w*)/g);
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      narg = _ref[_i];
      chain = narg.split('.');
      ref = chain.shift();
      if (ref === '_arg') {
        targetArg = funcStr.match(new RegExp("(\\w*) = _arg." + chain[0]))[1];
        if (chain[chain.length - 1] !== targetArg) {
          chain.push(targetArg);
        }
      } else if (ref === '__ref') {
        console.log(funcStr);
      }
      nestings[targetArg] = chain;
    }
    return modules.push({
      _nested: nestings
    });
  }
};
