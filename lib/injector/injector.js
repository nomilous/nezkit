// Generated by CoffeeScript 1.4.0
var injector, support;

support = require('./injector_support');

injector = {
  inject: function() {
    var fn, key, list;
    if (typeof arguments[0] === 'function') {
      fn = arguments[0];
      return fn.apply(null, injector.loadServices(support.fn2modules(fn)));
    } else {
      list = arguments[0];
      for (key in arguments) {
        fn = arguments[key];
      }
      return fn.apply(null, injector.loadServices(support.fn2modules(fn), list));
    }
  },
  loadServices: function(dynamic, preDefined) {
    var config, module, name, services, skip;
    skip = preDefined.length;
    services = preDefined;
    for (name in dynamic) {
      if (skip-- > 0) {
        continue;
      }
      config = dynamic[name];
      if (config.module.match(/^[A-Z]/)) {
        services.push(require(Injector.findModule(arg.name)));
      } else {
        try {
          module = require(config.module);
        } catch (error) {
          throw error;
        }
        services.push(module);
      }
    }
    return services;
  }
};

module.exports = injector;
