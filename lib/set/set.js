// Generated by CoffeeScript 1.4.0
var set;

set = {
  series: function() {
    var action, afterAll, afterEach, args, opts, required, results, target, targets, _i, _j, _len, _len1, _ref, _ref1;
    opts = arguments[0];
    _ref = ['targets', 'action'];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      required = _ref[_i];
      if (typeof opts[required] === 'undefined') {
        throw new Error("undefined opts." + required + " in set.series(opts, args, callback)");
      }
    }
    if (!(opts.targets instanceof Array)) {
      throw new Error("opts.targets should be array in set.series(opts, args, callback)");
    }
    action = opts.action;
    targets = [];
    results = [];
    afterEach = opts.afterEach || function() {};
    args = arguments[1] instanceof Function ? [] : arguments[1];
    afterAll = arguments[2] || arguments[1];
    if (!(afterAll instanceof Function)) {
      throw new Error("undefined callback in set.series(opts, args, callback)");
    }
    _ref1 = opts.targets;
    for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
      target = _ref1[_j];
      targets.push(target);
    }
    args.push(function(error, result) {
      afterEach(error, result);
      if (error) {
        afterAll(error, results);
        return;
      }
      results.push(result);
      return set.recurse(results, targets, action, args, afterAll);
    });
    return set.recurse(results, targets, action, args, afterAll);
  },
  recurse: function(results, targets, action, args, afterAll) {
    var target;
    target = targets.shift();
    if (!target) {
      afterAll(null, results);
      return;
    }
    return target[action].apply(target, args);
  }
};

module.exports = {
  series: set.series
};
